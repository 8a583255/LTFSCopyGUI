<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FubarDev.FtpServer.FileSystem.Unix</name>
    </assembly>
    <members>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixDirectoryEntry.Info">
            <summary>
            Gets the unix directory info.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixDirectoryEntry.IsRoot">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixDirectoryEntry.IsDeletable">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileEntry.#ctor(Mono.Unix.UnixFileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileEntry"/> class.
            </summary>
            <param name="info">The file information.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileEntry.Info">
            <summary>
            Gets the unix file info.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileEntry.Size">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem">
            <summary>
            A backend that uses Posix(?) API calls to access the file system.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.#ctor(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,FubarDev.FtpServer.AccountManagement.IFtpUser,Mono.Unix.UnixUserInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem"/> class.
            </summary>
            <param name="root">The root directory.</param>
            <param name="user">The current user.</param>
            <param name="userInfo">The user information.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.#ctor(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.Security.Claims.ClaimsPrincipal,Mono.Unix.UnixUserInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem"/> class.
            </summary>
            <param name="root">The root directory.</param>
            <param name="user">The current user.</param>
            <param name="userInfo">The user information.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.#ctor(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.Security.Claims.ClaimsPrincipal,Mono.Unix.UnixUserInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem"/> class.
            </summary>
            <param name="root">The root directory.</param>
            <param name="user">The current user.</param>
            <param name="userInfo">The user information.</param>
            <param name="flushStream">Flush the stream after every write operation.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.#ctor(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.Security.Claims.ClaimsPrincipal,Mono.Unix.UnixUserInfo,System.Boolean,Microsoft.Extensions.Logging.ILogger{FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem})">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem"/> class.
            </summary>
            <param name="root">The root directory.</param>
            <param name="user">The current user.</param>
            <param name="userInfo">The user information.</param>
            <param name="flushStream">Flush the stream after every write operation.</param>
            <param name="logger">The logger for this file system implementation.</param>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.SupportsAppend">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.SupportsNonEmptyDirectoryDelete">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.FileSystemEntryComparer">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.Root">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.GetEntriesAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.GetEntryByNameAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.MoveAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.UnlinkAsync(FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.CreateDirectoryAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.OpenReadAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.AppendAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.Nullable{System.Int64},System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.CreateAsync(FubarDev.FtpServer.FileSystem.IUnixDirectoryEntry,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.ReplaceAsync(FubarDev.FtpServer.FileSystem.IUnixFileEntry,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystem.SetMacTimeAsync(FubarDev.FtpServer.FileSystem.IUnixFileSystemEntry,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.GenericInfo">
            <summary>
            Gets generic unix file system entry information.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.Owner">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.Group">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.Name">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.Permissions">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.LastWriteTime">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.CreatedTime">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemEntry.NumberOfLinks">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions">
            <summary>
            Options for the Unix file system.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions.Root">
            <summary>
            Gets or sets the default root path.
            </summary>
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions.FlushAfterWrite">
            <summary>
            Gets or sets a value indicating whether the content should be flushed to disk after every write operation.
            </summary>
        </member>
        <member name="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider">
            <summary>
            A file system provider that uses the Posix API.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider.#ctor(Microsoft.Extensions.Options.IOptions{FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemOptions},FubarDev.FtpServer.FileSystem.IAccountDirectoryQuery,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider"/> class.
            </summary>
            <param name="options">The file system options.</param>
            <param name="accountDirectoryQuery">Interface to query account directories.</param>
            <param name="loggerFactory">Factory to create loggers.</param>
        </member>
        <member name="M:FubarDev.FtpServer.FileSystem.Unix.UnixFileSystemProvider.Create(FubarDev.FtpServer.IAccountInformation)">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.User">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.Group">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.Other">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.UnixAccessInfo.Read">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.UnixAccessInfo.Write">
            <inheritdoc />
        </member>
        <member name="P:FubarDev.FtpServer.FileSystem.Unix.UnixPermissions.UnixAccessInfo.Execute">
            <inheritdoc />
        </member>
        <member name="T:FubarDev.FtpServer.UnixFsFtpServerBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:FubarDev.FtpServer.IFtpServerBuilder"/>.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.UnixFsFtpServerBuilderExtensions.UseUnixFileSystem(FubarDev.FtpServer.IFtpServerBuilder)">
            <summary>
            Uses the Unix file system API.
            </summary>
            <param name="builder">The server builder used to configure the FTP server.</param>
            <returns>the server builder used to configure the FTP server.</returns>
        </member>
        <member name="T:FubarDev.FtpServer.ExceptionExtensions">
            <summary>
            Extension methods for exceptions.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.ExceptionExtensions.Is``1(System.Exception)">
            <summary>
            Check if exception is of the given type.
            </summary>
            <typeparam name="TException">The exception type to check for.</typeparam>
            <param name="ex">The exception to check.</param>
            <returns><see langword="true"/> if the exception is of the given type.</returns>
        </member>
        <member name="M:FubarDev.FtpServer.ExceptionExtensions.Get``1(System.Exception)">
            <summary>
            Cast the exception to the given type.
            </summary>
            <typeparam name="TException">The target exception type.</typeparam>
            <param name="ex">The exception to cast.</param>
            <returns>The exception of the target exception type.</returns>
        </member>
        <member name="T:FubarDev.FtpServer.StreamExtensions">
            <summary>
            Extension methods for <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="M:FubarDev.FtpServer.StreamExtensions.CopyToAsync(System.IO.Stream,System.IO.Stream,System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Copy to target stream, while flushing the data after every operation.
            </summary>
            <param name="source">The source stream.</param>
            <param name="destination">The destination stream.</param>
            <param name="bufferSize">The copy buffer size.</param>
            <param name="flush">Indicates whether the data should be flushed after every operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
    </members>
</doc>
